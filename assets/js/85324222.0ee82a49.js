"use strict";(self.webpackChunkkuberocketci_docs=self.webpackChunkkuberocketci_docs||[]).push([[81875],{56599:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"user-guide/application-sonarqube-project-properties","title":"SonarQube Project Properties for Application","description":"This section describes the subsequent possible actions that can be performed with the newly added or existing applications.","source":"@site/docs/user-guide/application-sonarqube-project-properties.md","sourceDirName":"user-guide","slug":"/user-guide/application-sonarqube-project-properties","permalink":"/docs/next/user-guide/application-sonarqube-project-properties","draft":false,"unlisted":false,"editUrl":"https://github.com/KubeRocketCI/docs/edit/main/docs/user-guide/application-sonarqube-project-properties.md","tags":[],"version":"current","lastUpdatedBy":"Oleksandr_Stepanov@epam.com","lastUpdatedAt":1739954692000,"frontMatter":{"title":"SonarQube Project Properties for Application","sidebar_label":"SonarQube Project Properties for Application","description":"This section describes the subsequent possible actions that can be performed with the newly added or existing applications."},"sidebar":"userGuideSidebar","previous":{"title":"Manage Applications","permalink":"/docs/next/user-guide/application"},"next":{"title":"Add Autotest","permalink":"/docs/next/user-guide/add-autotest"}}');var o=t(74848),i=t(28453);const s={title:"SonarQube Project Properties for Application",sidebar_label:"SonarQube Project Properties for Application",description:"This section describes the subsequent possible actions that can be performed with the newly added or existing applications."},a="SonarQube Project Properties for Application",c={},l=[{value:"Application repo structure",id:"application-repo-structure",level:2},{value:"Default project parameters",id:"default-project-parameters",level:2},{value:"Related Articles",id:"related-articles",level:2}];function p(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Details:t,Head:n}=r;return t||u("Details",!0),n||u("Head",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"sonarqube-project-properties-for-application",children:"SonarQube Project Properties for Application"})}),"\n",(0,o.jsx)(n,{children:(0,o.jsx)("link",{rel:"canonical",href:"https://docs.kuberocketci.io/docs/user-guide/application-sonarqube-project-properties/"})}),"\n",(0,o.jsx)(r.p,{children:"The KubeRocketCI platform simplifies this process by supporting SonarQube integration with predefined configurations. However, specific use cases may require customization. Below is a guide on setting the SonarQube project properties to meet all application requirements."}),"\n",(0,o.jsx)(r.h2,{id:"application-repo-structure",children:"Application repo structure"}),"\n",(0,o.jsxs)(r.p,{children:["When an application is added to the KubeRocketCI, a default ",(0,o.jsx)(r.code,{children:"sonar-project.properties"})," file is automatically generated during the codebase onboarding process. However, depending on the specific needs of the application, a separate configuration file can be created, placed in the root directory of the application repository, and used for SonarQube code quality during the pipeline:"]}),"\n",(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:(0,o.jsx)("b",{children:"example repository structure"})}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-text",children:"go-example-project\n  \u251c\u2500\u2500 deploy-templates\n  \u2502   \u2514\u2500\u2500 ..\n  \u251c\u2500\u2500 Dockerfile\n  \u251c\u2500\u2500 Makefile\n  \u251c\u2500\u2500 controllers\n  \u2502   \u251c\u2500\u2500 hello.go\n  \u2502   \u2514\u2500\u2500 hello_test.go\n  \u251c\u2500\u2500 go.mod\n  \u251c\u2500\u2500 go.sum\n  \u251c\u2500\u2500 main.go\n  \u251c\u2500\u2500 routers\n  \u2502   \u2514\u2500\u2500 router.go\n  \u2514\u2500\u2500 sonar-project.properties\n"})})]}),"\n",(0,o.jsx)(r.h2,{id:"default-project-parameters",children:"Default project parameters"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"sonar.projectKey:"})," A unique identifier for the SonarQube project. This is also set to the application ",(0,o.jsx)(r.strong,{children:"codebase name"})," by the KubeRocketCI pipelines."]}),"\n"]}),"\n",(0,o.jsxs)(r.li,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"sonar.projectName:"})," A readable name for the project. This is also set to the application ",(0,o.jsx)(r.strong,{children:"codebase name"})," by the KubeRocketCI pipelines."]}),"\n"]}),"\n",(0,o.jsxs)(r.li,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"sonar.qualitygate.wait:"})," Enables waiting for Quality Gate results before proceeding (e.g., ",(0,o.jsx)(r.strong,{children:"true"})," or ",(0,o.jsx)(r.strong,{children:"false"}),") by default KubeRocketCI pipelines set it ",(0,o.jsx)(r.strong,{children:"true"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(r.li,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"sonar.host.url:"})," by default set from KuberocketCI pipelines from ",(0,o.jsxs)(r.a,{href:"/docs/next/operator-guide/code-quality/sonarqube#configuration",children:["KuberocketCI sonarqube integration ",(0,o.jsx)(r.strong,{children:"url"})]}),"."]}),"\n"]}),"\n",(0,o.jsxs)(r.li,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"sonar.login:"})," by default set from KuberocketCI pipelines from ",(0,o.jsxs)(r.a,{href:"/docs/next/operator-guide/code-quality/sonarqube#configuration",children:["KuberocketCI sonarqube integration ",(0,o.jsx)(r.strong,{children:"token"})]}),"."]}),"\n"]}),"\n",(0,o.jsxs)(r.li,{children:["\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.strong,{children:"sonar.organization:"})," by default not set from KuberocketCI pipelines and used only for ",(0,o.jsx)(r.a,{href:"/docs/next/quick-start/integrate-sonarcloud",children:"sonar cloud integration"}),"."]}),"\n",(0,o.jsxs)(t,{children:[(0,o.jsx)("summary",{children:(0,o.jsx)("b",{children:"sonar-project.properties: file example of configuration"})}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-text",children:"sonar.projectKey=go-example-project\nsonar.projectName=go-example-project\nsonar.exclusions=**/cmd/**,**/deploy/**,**/deploy-templates/**,**/*.groovy,**/config/**\nsonar.language=go\n"})})]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(r.p,{children:["For additional assistance with configuring SonarQube properties, please refer to the ",(0,o.jsx)(r.a,{href:"https://docs.sonarsource.com/sonarqube-server/10.6/analyzing-source-code/scanners/sonarscanner/",children:"SonarQube documentation"})]}),"\n",(0,o.jsx)(r.h2,{id:"related-articles",children:"Related Articles"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:(0,o.jsx)(r.a,{href:"/docs/next/user-guide/add-application",children:"Add Application"})}),"\n",(0,o.jsx)(r.li,{children:(0,o.jsx)(r.a,{href:"/docs/next/quick-start/integrate-sonarcloud",children:"Integrate SonarQube"})}),"\n",(0,o.jsx)(r.li,{children:(0,o.jsx)(r.a,{href:"/docs/next/quick-start/create-application",children:"Create Application"})}),"\n"]})]})}function d(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}function u(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},28453:(e,r,t)=>{t.d(r,{R:()=>s,x:()=>a});var n=t(96540);const o={},i=n.createContext(o);function s(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);