"use strict";(self.webpackChunkkuberocketci_docs=self.webpackChunkkuberocketci_docs||[]).push([[41830],{983:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/argo-cd-atlantis-6e325d894fe9145d9b5d5cf63ad532dc.png"},10386:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/aws-iam-role-95fcb4234301c23897b119e0eeae97c9.png"},11470:(e,t,n)=>{n.d(t,{A:()=>y});var r=n(96540),s=n(34164),i=n(23104),a=n(56347),o=n(205),l=n(57485),c=n(31682),d=n(70679);function h(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:t,children:n}=e;return(0,r.useMemo)(()=>{const e=t??function(e){return h(e).map(({props:{value:e,label:t,attributes:n,default:r}})=>({value:e,label:t,attributes:n,default:r}))}(n);return function(e){const t=(0,c.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function p({value:e,tabValues:t}){return t.some(t=>t.value===e)}function x({queryString:e=!1,groupId:t}){const n=(0,a.W6)(),s=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,l.aZ)(s),(0,r.useCallback)(e=>{if(!s)return;const t=new URLSearchParams(n.location.search);t.set(s,e),n.replace({...n.location,search:t.toString()})},[s,n])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,i=u(e),[a,l]=(0,r.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i})),[c,h]=x({queryString:n,groupId:s}),[g,m]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,s]=(0,d.Dv)(t);return[n,(0,r.useCallback)(e=>{t&&s.set(e)},[t,s])]}({groupId:s}),j=(()=>{const e=c??g;return p({value:e,tabValues:i})?e:null})();(0,o.A)(()=>{j&&l(j)},[j]);return{selectedValue:a,selectValue:(0,r.useCallback)(e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),m(e)},[h,m,i]),tabValues:i}}var m=n(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=n(74848);function b({className:e,block:t,selectedValue:n,selectValue:r,tabValues:a}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),c=e=>{const t=e.currentTarget,s=o.indexOf(t),i=a[s].value;i!==n&&(l(t),r(i))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;t=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;t=o[n]??o[o.length-1];break}}t?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},e),children:a.map(({value:e,label:t,attributes:r})=>(0,f.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:c,...r,className:(0,s.A)("tabs__item",j.tabItem,r?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function A({lazy:e,children:t,selectedValue:n}){const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=i.find(e=>e.props.value===n);return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:i.map((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function v(e){const t=g(e);return(0,f.jsxs)("div",{className:(0,s.A)("tabs-container",j.tabList),children:[(0,f.jsx)(b,{...t,...e}),(0,f.jsx)(A,{...t,...e})]})}function y(e){const t=(0,m.A)();return(0,f.jsx)(v,{...e,children:h(e.children)},String(t))}},19365:(e,t,n)=>{n.d(t,{A:()=>a});n(96540);var r=n(34164);const s={tabItem:"tabItem_Ymn6"};var i=n(74848);function a({children:e,hidden:t,className:n}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,n),hidden:t,children:e})}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(96540);const s={},i=r.createContext(s);function a(e){const t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}},29472:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/aws-iam-role-review-b20ec5b54eb11c3c2cee26dec6a62456.png"},31171:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/oauth2-proxy-6436b8b2f78013f294f6ca7111aab8e7.png"},44826:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/bitbucket-webhook-6df4861b7af32c83604be61c2f5b598c.png"},51602:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/aws-iam-role-permissions-4bb711f05bc4a39127b09e0614306c4f.png"},63496:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/github-webhook-538cb040f51fb79f3dd4d6b0e2619239.png"},81640:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/gitlab-webhook-15ff0eeece8d9b844679f4d6944df311.png"},96102:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"operator-guide/infrastructure-providers/atlantis-installation","title":"Atlantis Installation and Configuration Guide for Kubernetes: Terraform Automation","description":"Complete step-by-step guide for installing Atlantis on Kubernetes with Helm or Argo CD, configuring security with OAuth2 or basic auth, setting up Git webhooks (GitHub, GitLab, Bitbucket), and IAM credentials for seamless Terraform automation workflows.","source":"@site/docs/operator-guide/infrastructure-providers/atlantis-installation.md","sourceDirName":"operator-guide/infrastructure-providers","slug":"/operator-guide/infrastructure-providers/atlantis-installation","permalink":"/docs/next/operator-guide/infrastructure-providers/atlantis-installation","draft":false,"unlisted":false,"editUrl":"https://github.com/KubeRocketCI/docs/edit/main/docs/operator-guide/infrastructure-providers/atlantis-installation.md","tags":[],"version":"current","lastUpdatedBy":"Daniil Nedostup","lastUpdatedAt":1750506150000,"frontMatter":{"title":"Atlantis Installation and Configuration Guide for Kubernetes: Terraform Automation","description":"Complete step-by-step guide for installing Atlantis on Kubernetes with Helm or Argo CD, configuring security with OAuth2 or basic auth, setting up Git webhooks (GitHub, GitLab, Bitbucket), and IAM credentials for seamless Terraform automation workflows.","sidebar_label":"Atlantis Installation"},"sidebar":"operatorGuideSidebar","previous":{"title":"Overview","permalink":"/docs/next/operator-guide/infrastructure-providers/overview"},"next":{"title":"Deploy AWS EKS Cluster","permalink":"/docs/next/operator-guide/deploy-aws-eks"}}');var s=n(74848),i=n(28453),a=n(11470),o=n(19365);const l={title:"Atlantis Installation and Configuration Guide for Kubernetes: Terraform Automation",description:"Complete step-by-step guide for installing Atlantis on Kubernetes with Helm or Argo CD, configuring security with OAuth2 or basic auth, setting up Git webhooks (GitHub, GitLab, Bitbucket), and IAM credentials for seamless Terraform automation workflows.",sidebar_label:"Atlantis Installation"},c="Atlantis: Enterprise-Grade Terraform Automation for Kubernetes",d={},h=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installing Atlantis",id:"installing-atlantis",level:2},{value:"Approach 1: Using Argo CD",id:"approach-1-using-argo-cd",level:3},{value:"Approach 2: Deploy Using Helm",id:"approach-2-deploy-using-helm",level:3},{value:"Configuring Atlantis",id:"configuring-atlantis",level:2},{value:"Authentication Configuration",id:"authentication-configuration",level:2},{value:"Basic Authentication",id:"basic-authentication",level:3},{value:"External Authentication Proxy (OAuth2 Proxy)",id:"external-authentication-proxy-oauth2-proxy",level:3},{value:"Webhook Configuration",id:"webhook-configuration",level:2},{value:"Provider Credentials",id:"provider-credentials",level:2},{value:"Creating Atlantis IAM Role",id:"creating-atlantis-iam-role",level:3},{value:"Using built-in Atlantis IAM Role",id:"using-built-in-atlantis-iam-role",level:3},{value:"Related Articles",id:"related-articles",level:2}];function u(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Details:r,Head:l}=t;return r||x("Details",!0),l||x("Head",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(l,{children:(0,s.jsx)("link",{rel:"canonical",href:"https://docs.kuberocketci.io/docs/operator-guide/infrastructure-providers/atlantis-installation"})}),"\n",(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"atlantis-enterprise-grade-terraform-automation-for-kubernetes",children:"Atlantis: Enterprise-Grade Terraform Automation for Kubernetes"})}),"\n",(0,s.jsx)(t.p,{children:"Atlantis is an enterprise-ready tool for automating Terraform workflows in Kubernetes environments. It provides a robust web interface and seamlessly integrates with version control systems (VCS) to automatically run Terraform operations as part of the pull request process. This enables teams to systematically review, approve, and apply infrastructure changes in a consistent, secure, and auditable manner."}),"\n",(0,s.jsx)(t.p,{children:"This guide covers the full process of installing and configuring Atlantis as Helm chart. It includes setting up authentication, configuring integration with supported version control systems (such as Bitbucket, GitHub, or GitLab), and preparing Atlantis to automate Terraform workflows triggered by pull/merge requests."}),"\n",(0,s.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(t.p,{children:"To install and configure Atlantis, ensure the following prerequisites are met:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["A running ",(0,s.jsx)(t.a,{href:"/docs/next/operator-guide/deploy-aws-eks",children:"AWS EKS"})," cluster with the necessary ",(0,s.jsx)(t.a,{href:"https://aws.amazon.com/iam",children:"IAM"})," permissions to create IAM roles."]}),"\n",(0,s.jsxs)(t.li,{children:["A Git repository containing Terraform code with the required repository ",(0,s.jsx)(t.a,{href:"https://www.runatlantis.io/docs/requirements.html#repository-structure",children:"structure"})," is created."]}),"\n",(0,s.jsxs)(t.li,{children:["An Atlantis Git ",(0,s.jsx)(t.a,{href:"https://www.runatlantis.io/docs/access-credentials.html#create-an-atlantis-user-optional",children:"user"})," is created with a generated ",(0,s.jsx)(t.a,{href:"https://www.runatlantis.io/docs/access-credentials.html#generating-an-access-token",children:"Access Token"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["A forked copy of the ",(0,s.jsx)(t.a,{href:"https://github.com/epam/edp-cluster-add-ons",children:"edp-cluster-add-ons"})," repository for managing the Atlantis installation is cloned to the local machine."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://helm.sh",children:"Helm"})," is installed and configured."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://kubernetes.io/docs/tasks/tools/",children:"kubectl"})," is installed and configured."]}),"\n",(0,s.jsxs)(t.li,{children:["(Optional) ",(0,s.jsx)(t.a,{href:"/docs/next/operator-guide/install-argocd",children:"Argo CD"})," is installed and configured."]}),"\n",(0,s.jsxs)(t.li,{children:["(Optional) ",(0,s.jsx)(t.a,{href:"../secrets-management/external-secrets-operator-integration",children:"External Secrets Operator"})," is installed and configured."]}),"\n",(0,s.jsxs)(t.li,{children:["(Optional) ",(0,s.jsx)(t.a,{href:"../auth/keycloak",children:"Keycloak"})," and ",(0,s.jsx)(t.a,{href:"https://github.com/epam/edp-keycloak-operator",children:"keycloak-operator"})," is installed and configured."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"installing-atlantis",children:"Installing Atlantis"}),"\n",(0,s.jsxs)(t.p,{children:["There are two approaches to install Atlantis using ",(0,s.jsx)(t.a,{href:"https://github.com/epam/edp-cluster-add-ons",children:"edp-cluster-add-ons"})," repository:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Using Argo CD"}),": This approach implies installing Atlantis as an Argo CD Application resource."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Using Helm"}),": This approach involves installing Atlantis via common Helm commands."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"approach-1-using-argo-cd",children:"Approach 1: Using Argo CD"}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["For more information on configuring ",(0,s.jsx)(t.a,{href:"https://github.com/epam/edp-cluster-add-ons",children:"edp-cluster-add-ons"})," repository, refer to the ",(0,s.jsx)(t.a,{href:"/docs/next/operator-guide/add-ons-overview",children:"Install via Add-Ons"})," page."]})}),"\n",(0,s.jsx)(t.p,{children:"The first approach is to deploy Atlantis using Argo CD. Follow the steps below to install Atlantis using Argo CD:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Clone the forked ",(0,s.jsx)(t.a,{href:"https://github.com/epam/edp-cluster-add-ons",children:"edp-cluster-add-ons"})," repository."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Navigate to the ",(0,s.jsx)(t.code,{children:"clusters/core/addons/atlantis"})," directory and configure the ",(0,s.jsx)(t.code,{children:"values.yaml"})," file with the necessary values for the Atlantis installation."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["After configuring the Atlantis Helm chart values, navigate to the ",(0,s.jsx)(t.code,{children:"clusters/core/apps"})," directory. In the ",(0,s.jsx)(t.code,{children:"values.yaml"})," file, update the ",(0,s.jsx)(t.code,{children:"atlantis"})," section by specifying the ",(0,s.jsx)(t.code,{children:"enable"})," field as ",(0,s.jsx)(t.code,{children:"true"})," to enable Argo CD Application creation for the Atlantis. Modify the ",(0,s.jsx)(t.code,{children:"createNamespace"})," and ",(0,s.jsx)(t.code,{children:"namespace"})," fields as needed. For example:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"atlantis:\n  createNamespace: true\n  enable: true\n  namespace: atlantis\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Commit and push the changes to the remote repository. After the changes are pushed, navigate to the Argo CD and sync the Atlantis application. Verify that the Atlantis is successfully deployed:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Argo CD KrakenD",src:n(983).A+"",width:"3364",height:"1662"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"approach-2-deploy-using-helm",children:"Approach 2: Deploy Using Helm"}),"\n",(0,s.jsx)(t.p,{children:"The second approach is to deploy Atlantis using Helm. Follow the steps below to install Atlantis using Helm:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Clone the forked ",(0,s.jsx)(t.a,{href:"https://github.com/epam/edp-cluster-add-ons",children:"edp-cluster-add-ons"})," repository."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Navigate to the ",(0,s.jsx)(t.code,{children:"clusters/core/addons/atlantis"})," directory and configure the ",(0,s.jsx)(t.code,{children:"values.yaml"})," file with the necessary values for the Atlantis installation."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"After configuring the Atlantis Helm chart values, run the following command to deploy the Atlantis:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"helm upgrade --install atlantis . -n atlantis --create-namespace\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Verify that the Atlantis is successfully deployed."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"configuring-atlantis",children:"Configuring Atlantis"}),"\n",(0,s.jsx)(t.p,{children:"This section describes how to configure Atlantis for integration with supported version control systems (VCS), including setting up authentication for Atlantis Web Server, configuring Webhooks, and creating the AWS IAM Role which is required for Atlantis to perform Terraform operations on the selected provider."}),"\n",(0,s.jsx)(t.h2,{id:"authentication-configuration",children:"Authentication Configuration"}),"\n",(0,s.jsx)(t.p,{children:"By default, Atlantis Web Server is deployed without any authentication mechanism, which means it is publicly accessible. This setup is not recommended, as it exposes the Atlantis UI and related operations to unauthorized access."}),"\n",(0,s.jsx)(t.p,{children:"This section describes two approaches to configure authentication for Atlantis Web Server:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Basic Authentication"}),": A simple method that restricts access using a static username and password, stored as a Kubernetes secret."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"External Authentication Proxy"}),": A more advanced method that delegates authentication to an external identity provider (e.g., Keycloak) using an authentication proxy tools like ",(0,s.jsx)(t.a,{href:"https://oauth2-proxy.github.io/oauth2-proxy/",children:"oauth2-proxy"}),". This method provides role-based access control and centralized user management."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"basic-authentication",children:"Basic Authentication"}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["For more details on configuring basic authentication, refer to the ",(0,s.jsx)(t.a,{href:"https://www.runatlantis.io/docs/security#enable-authentication-on-atlantis-web-server",children:"Atlantis Security documentation"})," page."]})}),"\n",(0,s.jsx)(t.p,{children:"To configure Basic Authentication for Atlantis Web Server, follow the steps below:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Create a Kubernetes secret containing the username and password for Basic Authentication:"}),"\n",(0,s.jsxs)(t.p,{children:["There are two ways to create a secret: manually using the ",(0,s.jsx)(t.code,{children:"kubectl"})," command or using the External Secrets Operator (ESO)."]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"kubectl"})}),(0,s.jsx)(t.p,{children:"Run the following command to create a secret:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"kubectl create secret generic atlantis-creds -n atlantis \\\n  --from-literal=username=<username> \\\n  --from-literal=password=<password>\n"})})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"External Secrets Operator"})}),(0,s.jsxs)(t.p,{children:["Enable ESO section in the ",(0,s.jsx)(t.code,{children:"values.yaml"})," file and configure the necessary parameters. For example:"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'eso:\n  # -- Install components of the ESO.\n  enabled: true\n  # -- Defines provider type. One of `aws`, `generic`, or `vault`.\n  provider: "aws"\n  # -- Defines the path to the secret in the provider. If provider is `vault`, this is the path must be prefixed with `secret/`.\n  secretPath: "/infra/core/addons/atlantis"\n  # -- Vault configuration (if provider is `vault`).\n  vault:\n    # -- Vault server URL.\n    server: "http://vault.vault:8200"\n    # -- Mount path for the Kubernetes authentication method.\n    mountPath: "core"\n    # -- Vault role for the Kubernetes authentication method.\n    role: atlantis\n  # -- AWS configuration (if provider is `aws`).\n  aws:\n    # -- AWS region.\n    region: "eu-central-1"\n    # -- AWS role ARN for the ExternalSecretOperator to assume.\n    roleArn: "arn:aws:iam::012345678910:role/AWSIRSA_Shared_ExternalSecretOperatorAccess"\n  generic:\n    secretStore:\n      # -- Defines SecretStore provider configuration.\n      providerConfig: {}\n      #  gcpsm:\n      #    projectID: "alphabet-123"\n'})}),(0,s.jsx)(t.p,{children:"AWS Parameter Store object/Vault secret structure:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{\n  "username": "<username>",\n  "password": "<password>"\n}\n'})}),(0,s.jsxs)(t.p,{children:["After configuring the ESO section, the External Secrets Operator will automatically create the Kubernetes secret ",(0,s.jsx)(t.code,{children:"atlantis-creds"})," during installation or upgrade of the Atlantis Helm chart."]})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Update the ",(0,s.jsx)(t.code,{children:"values.yaml"})," file to enable Basic Authentication by setting the ",(0,s.jsx)(t.code,{children:"atlantis.basicAuthSecretName"})," field to the name of the secret created in the previous step. For example:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'title="values.yaml"',children:"atlantis:\n  basicAuthSecretName: atlantis-creds\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Apply the changes by using the ",(0,s.jsx)(t.code,{children:"helm upgrade"})," command or syncing the Argo CD application."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"After configuring and enabling Basic Authentication, users will be required to provide the username and password to access the Atlantis Web Server."}),"\n",(0,s.jsx)(t.h3,{id:"external-authentication-proxy-oauth2-proxy",children:"External Authentication Proxy (OAuth2 Proxy)"}),"\n",(0,s.jsx)(t.p,{children:"To configure an external authentication proxy (e.g., OAuth2 Proxy) with Keycloak for Atlantis Web Server, follow the steps below:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Update the ",(0,s.jsx)(t.code,{children:"values.yaml"})," by setting the ",(0,s.jsx)(t.code,{children:"oidc.enabled"})," field to ",(0,s.jsx)(t.code,{children:"true"})," for enabling KeycloakClient resource creation. For example:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'title="values.yaml"',children:"oidc:\n  enabled: true\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Create a Kubernetes secret containing the Keycloak client credentials. The secret should include the ",(0,s.jsx)(t.code,{children:"clientSecret"})," field with the value of the Keycloak client secret. For example:"]}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"keycloak-client-atlantis-secret"})," is used by keycloak-operator to create the ",(0,s.jsx)(t.code,{children:"KeycloakClient"})," resource."]})}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"kubectl"})}),(0,s.jsx)(t.p,{children:"Run the following command to create a secret:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"kubectl create secret generic keycloak-client-atlantis-secret -n atlantis \\\n  --from-literal=clientSecret=<keycloak_client_secret>\n"})})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"External Secrets Operator"})}),(0,s.jsxs)(t.p,{children:["Enable ESO section in the ",(0,s.jsx)(t.code,{children:"values.yaml"})," file and configure the necessary parameters. For example:"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'eso:\n  # -- Install components of the ESO.\n  enabled: true\n  # -- Defines provider type. One of `aws`, `generic`, or `vault`.\n  provider: "aws"\n  # -- Defines the path to the secret in the provider. If provider is `vault`, this is the path must be prefixed with `secret/`.\n  secretPath: "/infra/core/addons/atlantis"\n  # -- Vault configuration (if provider is `vault`).\n  vault:\n    # -- Vault server URL.\n    server: "http://vault.vault:8200"\n    # -- Mount path for the Kubernetes authentication method.\n    mountPath: "core"\n    # -- Vault role for the Kubernetes authentication method.\n    role: atlantis\n  # -- AWS configuration (if provider is `aws`).\n  aws:\n    # -- AWS region.\n    region: "eu-central-1"\n    # -- AWS role ARN for the ExternalSecretOperator to assume.\n    roleArn: "arn:aws:iam::012345678910:role/AWSIRSA_Shared_ExternalSecretOperatorAccess"\n  generic:\n    secretStore:\n      # -- Defines SecretStore provider configuration.\n      providerConfig: {}\n      #  gcpsm:\n      #    projectID: "alphabet-123"\n'})}),(0,s.jsx)(t.p,{children:"AWS Parameter Store object/Vault secret structure:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{\n  "clientSecret": "<keycloak_client_secret>"\n}\n'})}),(0,s.jsxs)(t.p,{children:["After configuring the ESO section, the External Secrets Operator will automatically create the Kubernetes secret ",(0,s.jsx)(t.code,{children:"keycloak-client-atlantis-secret"})," during installation or upgrade of the Atlantis Helm chart."]})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Enable the ",(0,s.jsx)(t.code,{children:"oauth2-proxy"})," section in the ",(0,s.jsx)(t.code,{children:"values.yaml"})," file and configure the necessary parameters for the external authentication proxy. For example:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'title="values.yaml"',children:'oauth2-proxy:\n  enabled: true\n  extraArgs:\n    # Skip authentication for /events endpoint to allow Git webhook access\n    skip-auth-regex: "^/events$"\n  config:\n    configFile: |-\n      allowed_roles = ["administrator", "developer"]\n      client_id = "atlantis"\n      code_challenge_method="S256"\n      cookie_csrf_expire="5m"\n      cookie_csrf_per_request="true"\n      cookie_secure = "false"\n      email_domains = [ "*" ]\n      insecure_oidc_allow_unverified_email = "true"\n      oidc_issuer_url = "https://keycloak.example.com/realms/<realm_name>"\n      pass_access_token = "true"\n      pass_authorization_header = "true"\n      pass_basic_auth = "false"\n      provider = "keycloak-oidc"\n      redirect_url = "https://atlantis.example.com/oauth2/callback"\n      skip_jwt_bearer_tokens = "true"\n      upstreams = [ "http://atlantis:80" ]\n      whitelist_domains = ["*"]\n      silence_ping_logging = "true"\n\n    existingSecret: oauth2-proxy\n\n  ingress:\n    enabled: true\n    hosts:\n      - atlantis.example.com\n'})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Create a Kubernetes secret ",(0,s.jsx)(t.code,{children:"oauth2-proxy"})," containing the ",(0,s.jsx)(t.code,{children:"client-id"}),", ",(0,s.jsx)(t.code,{children:"client-secret"}),", and ",(0,s.jsx)(t.code,{children:"cookie-secret"})," values. The ",(0,s.jsx)(t.code,{children:"client-id"})," and ",(0,s.jsx)(t.code,{children:"client-secret"})," values should match the Keycloak client credentials. The ",(0,s.jsx)(t.code,{children:"cookie-secret"})," value is a random string used to encrypt the session cookies:"]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"kubectl"})}),(0,s.jsx)(t.p,{children:"Run the following command to create a secret:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"kubectl create secret generic oauth2-proxy -n atlantis \\\n  --from-literal=client-id=<keycloak_client_id> \\\n  --from-literal=client-secret=<keycloak_client_secret> \\\n  --from-literal=cookie-secret=<random_string>\n"})})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"External Secrets Operator"})}),(0,s.jsxs)(t.p,{children:["Enable ESO section in the ",(0,s.jsx)(t.code,{children:"values.yaml"})," file and configure the necessary parameters. For example:"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'eso:\n  # -- Install components of the ESO.\n  enabled: true\n  # -- Defines provider type. One of `aws`, `generic`, or `vault`.\n  provider: "aws"\n  # -- Defines the path to the secret in the provider. If provider is `vault`, this is the path must be prefixed with `secret/`.\n  secretPath: "/infra/core/addons/atlantis"\n  # -- Vault configuration (if provider is `vault`).\n  vault:\n    # -- Vault server URL.\n    server: "http://vault.vault:8200"\n    # -- Mount path for the Kubernetes authentication method.\n    mountPath: "core"\n    # -- Vault role for the Kubernetes authentication method.\n    role: atlantis\n  # -- AWS configuration (if provider is `aws`).\n  aws:\n    # -- AWS region.\n    region: "eu-central-1"\n    # -- AWS role ARN for the ExternalSecretOperator to assume.\n    roleArn: "arn:aws:iam::012345678910:role/AWSIRSA_Shared_ExternalSecretOperatorAccess"\n  generic:\n    secretStore:\n      # -- Defines SecretStore provider configuration.\n      providerConfig: {}\n      #  gcpsm:\n      #    projectID: "alphabet-123"\n'})}),(0,s.jsx)(t.p,{children:"AWS Parameter Store object/Vault secret structure:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{\n  "oauth2-proxy": {\n    "client-id": "atlantis",\n    "client-secret": "<keycloak_client_secret>",\n    "cookie-secret": "<random_generated_string>"\n  }\n}\n'})}),(0,s.jsxs)(t.p,{children:["After configuring the ESO section, the External Secrets Operator will automatically create the Kubernetes secret ",(0,s.jsx)(t.code,{children:"oauth2-proxy"})," during installation or upgrade of the Atlantis Helm chart."]})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Apply the changes by using the ",(0,s.jsx)(t.code,{children:"helm upgrade"})," command or syncing the Argo CD application."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"After configuring the external authentication proxy, users will be required to authenticate using Keycloak credentials to access the Atlantis Web Server:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"OAuth2 Proxy",src:n(31171).A+"",width:"3334",height:"1662"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"webhook-configuration",children:"Webhook Configuration"}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["For more details on configuring webhooks, refer to the ",(0,s.jsx)(t.a,{href:"https://www.runatlantis.io/docs/configuring-webhooks.html",children:"Atlantis Webhook documentation"}),"."]})}),"\n",(0,s.jsx)(t.p,{children:"Atlantis requires a webhook to be configured in the Git repository to trigger Terraform operations. The webhook should be set up to send events to the Atlantis Web Server URL."}),"\n",(0,s.jsx)(t.p,{children:"For each supported VCS, follow the steps below to configure the webhook:"}),"\n",(0,s.jsxs)(a.A,{defaultValue:"github",values:[{label:"GitHub",value:"github"},{label:"GitLab",value:"gitlab"},{label:"Bitbucket",value:"bitbucket"}],children:[(0,s.jsxs)(o.A,{value:"github",children:[(0,s.jsx)(t.p,{children:"To configure the Atlantis webhook in GitHub, follow these steps:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["In the GitHub repository, navigate to ",(0,s.jsx)(t.strong,{children:"Settings"})," -> ",(0,s.jsx)(t.strong,{children:"Webhooks"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Click ",(0,s.jsx)(t.strong,{children:"Add webhook"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Set the ",(0,s.jsx)(t.strong,{children:"Payload URL"})," to ",(0,s.jsx)(t.code,{children:"http://<atlantis-url>/events"})," or ",(0,s.jsx)(t.code,{children:"https://<atlantis-url>/events"})," (if using SSL)."]}),"\n",(0,s.jsxs)(t.li,{children:["Set the ",(0,s.jsx)(t.strong,{children:"Content type"})," to ",(0,s.jsx)(t.code,{children:"application/json"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["In the ",(0,s.jsx)(t.strong,{children:"Secret"})," field, provide the ",(0,s.jsx)(t.a,{href:"https://www.runatlantis.io/docs/webhook-secrets.html",children:"secret"})," generated for the webhook."]}),"\n",(0,s.jsxs)(t.li,{children:["Select ",(0,s.jsx)(t.strong,{children:"Let me select individual events"})," and choose the events you want to trigger the webhook, such as:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Pull request reviews"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Pushes"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Issue comments"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Pull requests"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["Leave the ",(0,s.jsx)(t.strong,{children:"Active"})," option enabled."]}),"\n",(0,s.jsxs)(t.li,{children:["Click ",(0,s.jsx)(t.strong,{children:"Add webhook"})," to save the configuration."]}),"\n"]}),(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"GitHub Webhook",src:n(63496).A+"",title:"GitHub Webhook",width:"3332",height:"1660"})})]}),(0,s.jsxs)(o.A,{value:"gitlab",children:[(0,s.jsx)(t.p,{children:"To configure the Atlantis webhook in GitLab, follow these steps:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["In the GitLab repository, navigate to ",(0,s.jsx)(t.strong,{children:"Settings"})," -> ",(0,s.jsx)(t.strong,{children:"Webhooks"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Click ",(0,s.jsx)(t.strong,{children:"Add new webhook"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Set the ",(0,s.jsx)(t.strong,{children:"Name"})," to ",(0,s.jsx)(t.code,{children:"atlantis"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Set the ",(0,s.jsx)(t.strong,{children:"URL"})," to ",(0,s.jsx)(t.code,{children:"http://<atlantis-url>/events"})," or ",(0,s.jsx)(t.code,{children:"https://<atlantis-url>/events"})," (if using SSL)."]}),"\n",(0,s.jsxs)(t.li,{children:["In the ",(0,s.jsx)(t.strong,{children:"Secret token"})," field, provide the ",(0,s.jsx)(t.a,{href:"https://www.runatlantis.io/docs/webhook-secrets.html",children:"secret"})," generated for the webhook."]}),"\n",(0,s.jsxs)(t.li,{children:["Select the events you want to trigger the webhook, such as:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Push events"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Comments"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Merge Request events"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["Click ",(0,s.jsx)(t.strong,{children:"Add webhook"})," to save the configuration."]}),"\n"]}),(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"GitLab Webhook",src:n(81640).A+"",title:"GitLab Webhook",width:"3334",height:"1660"})})]}),(0,s.jsxs)(o.A,{value:"bitbucket",children:[(0,s.jsx)(t.p,{children:"To configure the Atlantis webhook in Bitbucket, follow these steps:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["In the Bitbucket repository, navigate to ",(0,s.jsx)(t.strong,{children:"Repository Settings"}),". Under the ",(0,s.jsx)(t.strong,{children:"Workflow"})," section, select ",(0,s.jsx)(t.strong,{children:"Webhooks"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Click ",(0,s.jsx)(t.strong,{children:"Add webhook"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Set the ",(0,s.jsx)(t.strong,{children:"Title"})," to ",(0,s.jsx)(t.code,{children:"atlantis"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Set the ",(0,s.jsx)(t.strong,{children:"URL"})," to ",(0,s.jsx)(t.code,{children:"http://<atlantis-url>/events"})," or ",(0,s.jsx)(t.code,{children:"https://<atlantis-url>/events"})," (if using SSL)."]}),"\n",(0,s.jsxs)(t.li,{children:["In the ",(0,s.jsx)(t.strong,{children:"Secret"})," field, provide the ",(0,s.jsx)(t.a,{href:"https://www.runatlantis.io/docs/webhook-secrets.html",children:"secret"})," generated for the webhook."]}),"\n",(0,s.jsxs)(t.li,{children:["In the ",(0,s.jsx)(t.strong,{children:"Triggers"})," section, uncheck all options for ",(0,s.jsx)(t.strong,{children:"Repository"})," and ",(0,s.jsx)(t.strong,{children:"Issue"})," events. For ",(0,s.jsx)(t.strong,{children:"Pull Request"})," events, select the following:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Created"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Updated"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Merged"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Declined"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.strong,{children:"Comment"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["Click ",(0,s.jsx)(t.strong,{children:"Save"})," to save the configuration."]}),"\n"]}),(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Bitbucket Webhook",src:n(44826).A+"",title:"Bitbucket Webhook",width:"3332",height:"1662"})})]})]}),"\n",(0,s.jsxs)(t.p,{children:["After configuring the webhook, it is necessary to create the Atlantis webhook Kubernetes secret. This secret should contain the ",(0,s.jsx)(t.strong,{children:"Access Token"})," and ",(0,s.jsx)(t.strong,{children:"Secret"})," fields, which are used to authenticate the webhook requests sent from the VCS to the Atlantis Web Server."]}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Create a Kubernetes webhook secret containing the ",(0,s.jsx)(t.strong,{children:"Access Token"})," and ",(0,s.jsx)(t.strong,{children:"Secret"})," parameters."]}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["Replace ",(0,s.jsx)(t.code,{children:"bitbucket_token"})," and ",(0,s.jsx)(t.code,{children:"bitbucket_secret"})," with names matching your Git server. For example, use ",(0,s.jsx)(t.code,{children:"github_token"})," and ",(0,s.jsx)(t.code,{children:"github_secret"})," for GitHub, and ",(0,s.jsx)(t.code,{children:"gitlab_token"})," and ",(0,s.jsx)(t.code,{children:"gitlab_secret"})," for GitLab."]})}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"Currently, only Bitbucket is supported for the creation of the webhook secret with the External secrets operator. But, is possible to create the External secrets manifests manually for GitHub and GitLab cases."})}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"kubectl"})}),(0,s.jsx)(t.p,{children:"Run the following command to create a secret, e.g. for Bitbucket:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"kubectl create secret generic atlantis-webhook \\\n  --from-literal=bitbucket_token=<bitbucket_token> \\\n  --from-literal=bitbucket_secret=<bitbucket_secret>\n"})})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)("b",{children:"External Secrets Operator (Bitbucket only)"})}),(0,s.jsxs)(t.p,{children:["Enable ESO section in the ",(0,s.jsx)(t.code,{children:"values.yaml"})," file and configure the necessary parameters. For example:"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'eso:\n  # -- Install components of the ESO.\n  enabled: true\n  # -- Defines provider type. One of `aws`, `generic`, or `vault`.\n  provider: "aws"\n  # -- Defines the path to the secret in the provider. If provider is `vault`, this is the path must be prefixed with `secret/`.\n  secretPath: "/infra/core/addons/atlantis"\n  # -- Vault configuration (if provider is `vault`).\n  vault:\n    # -- Vault server URL.\n    server: "http://vault.vault:8200"\n    # -- Mount path for the Kubernetes authentication method.\n    mountPath: "core"\n    # -- Vault role for the Kubernetes authentication method.\n    role: atlantis\n  # -- AWS configuration (if provider is `aws`).\n  aws:\n    # -- AWS region.\n    region: "eu-central-1"\n    # -- AWS role ARN for the ExternalSecretOperator to assume.\n    roleArn: "arn:aws:iam::012345678910:role/AWSIRSA_Shared_ExternalSecretOperatorAccess"\n  generic:\n    secretStore:\n      # -- Defines SecretStore provider configuration.\n      providerConfig: {}\n      #  gcpsm:\n      #    projectID: "alphabet-123"\n'})}),(0,s.jsx)(t.p,{children:"AWS Parameter Store object/Vault secret structure:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'{\n  "bitbucket_token": "<bitbucket_token>",\n  "bitbucket_secret": "<bitbucket_secret>"\n}\n'})}),(0,s.jsxs)(t.p,{children:["After configuring the ESO section, the External Secrets Operator will automatically create the Kubernetes secret ",(0,s.jsx)(t.code,{children:"atlantis-webhook"})," during installation or upgrade of the Atlantis Helm chart."]})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Update the ",(0,s.jsx)(t.code,{children:"values.yaml"})," file to enable the webhook secret by setting the ",(0,s.jsx)(t.code,{children:"atlantis.webhookSecretName"})," field to the name of the secret created in the previous step. For example:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'title="values.yaml"',children:"atlantis:\n  webhookSecretName: atlantis-webhook\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Apply the changes by using the ",(0,s.jsx)(t.code,{children:"helm upgrade"})," command or syncing the Argo CD application."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"After configuring the webhook secret, Atlantis will be able to authenticate incoming webhook requests from the VCS."}),"\n",(0,s.jsx)(t.h2,{id:"provider-credentials",children:"Provider Credentials"}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["For more details on configuring provider credentials, refer to the ",(0,s.jsx)(t.a,{href:"https://www.runatlantis.io/docs/provider-credentials",children:"Atlantis Provider Credentials documentation"}),"."]})}),"\n",(0,s.jsxs)(t.p,{children:["Depending on the selected provider, Atlantis needs to be provided with the necessary permissions to perform Terraform operations. In this section, it is described how to create the required AWS IAM Role or use the built-in Atlantis IAM Role from the ",(0,s.jsx)(t.a,{href:"https://github.com/KubeRocketCI/terraform-aws-platform",children:"terraform-aws-platform"})," repository."]}),"\n",(0,s.jsx)(t.h3,{id:"creating-atlantis-iam-role",children:"Creating Atlantis IAM Role"}),"\n",(0,s.jsx)(t.p,{children:"To create the AWS IAM Role for Atlantis, follow the steps below:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Navigate to the AWS Management Console and open the ",(0,s.jsx)(t.a,{href:"https://aws.amazon.com/iam/",children:"IAM"})," service."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Under the ",(0,s.jsx)(t.strong,{children:"Access management"})," section, select ",(0,s.jsx)(t.strong,{children:"Roles"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Click ",(0,s.jsx)(t.strong,{children:"Create role"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Select ",(0,s.jsx)(t.strong,{children:"Web identity"})," as the trusted entity type."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["In the ",(0,s.jsx)(t.strong,{children:"Web identity"})," section, select the OIDC provider for appropriate EKS cluster and the audience (",(0,s.jsx)(t.code,{children:"sts.amazonaws.com"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Add the condition to the trust policy to allow the Atlantis service account to assume the role. The condition should include the following values:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Key"})," - ",(0,s.jsx)(t.code,{children:"oidc.eks.<region>.amazonaws.com/id/<OIDC_PROVIDER>:sub"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Condition"})," - ",(0,s.jsx)(t.code,{children:"StringLike"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Value"})," - ",(0,s.jsx)(t.code,{children:"system:serviceaccount:<atlantis-namespace>:<atlantis-service-account-name>"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"AWS IAM Role",src:n(10386).A+"",title:"AWS IAM Role",width:"3332",height:"1660"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Click ",(0,s.jsx)(t.strong,{children:"Next"})," to proceed to the permissions page."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["On the ",(0,s.jsx)(t.strong,{children:"Add permissions"})," page, attach the necessary policies for Atlantis to perform Terraform operations. Select the permissions boundary if required."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"AWS IAM Role Permissions",src:n(51602).A+"",title:"AWS IAM Role Permissions",width:"3332",height:"1662"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Click ",(0,s.jsx)(t.strong,{children:"Next"})," to proceed to the review page."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Provide a name for the role and review the configuration. Click ",(0,s.jsx)(t.strong,{children:"Create role"})," to create the role."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"AWS IAM Role Review",src:n(29472).A+"",title:"AWS IAM Role Review",width:"3332",height:"1660"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["After creating the AWS IAM Role, it is necessary to attach the role to the Atlantis service account. This can be done by updating the ",(0,s.jsx)(t.code,{children:"values.yaml"})," file of the Atlantis Helm chart."]}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Navigate to the ",(0,s.jsx)(t.code,{children:"clusters/core/addons/atlantis"})," directory of the forked ",(0,s.jsx)(t.a,{href:"https://github.com/epam/edp-cluster-add-ons",children:"edp-cluster-add-ons"})," repository."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Open the ",(0,s.jsx)(t.code,{children:"values.yaml"})," file and update the ",(0,s.jsx)(t.code,{children:"atlantis.serviceAccount.annotations"})," field to include the ARN of the created AWS IAM Role. For example:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'title="values.yaml"',children:"atlantis:\n  serviceAccount:\n    annotations:\n      eks.amazonaws.com/role-arn: arn:aws:iam::<AWS_ACCOUNT_ID>:role/<ROLE_NAME>\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Apply the changes by using the ",(0,s.jsx)(t.code,{children:"helm upgrade"})," command or syncing the Argo CD application."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"After configuring the AWS IAM Role, Atlantis will be able to assume the role and perform Terraform operations using the provided permissions."}),"\n",(0,s.jsx)(t.h3,{id:"using-built-in-atlantis-iam-role",children:"Using built-in Atlantis IAM Role"}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["For more details about Atlantis IAM Role creation, refer to the ",(0,s.jsx)(t.a,{href:"https://github.com/KubeRocketCI/terraform-aws-platform/tree/master/eks/irsa.tf",children:"terraform-aws-platform"})," repository."]})}),"\n",(0,s.jsxs)(t.p,{children:["In case of using the ",(0,s.jsx)(t.a,{href:"https://github.com/KubeRocketCI/terraform-aws-platform",children:"terraform-aws-platform"})," repository to manage the AWS infrastructure, Atlantis can use the built-in ",(0,s.jsx)(t.strong,{children:"Atlantis"})," IAM Role created by the repository. This IAM Role is automatically created and configured with the necessary permissions to assume the ",(0,s.jsx)(t.strong,{children:"KRCIDeployerRole"})," IAM Role for performing Terraform operations."]}),"\n",(0,s.jsx)(t.p,{children:"To use the built-in Atlantis IAM Role, follow the steps below:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Navigate to the AWS Management Console and open the ",(0,s.jsx)(t.a,{href:"https://aws.amazon.com/iam/",children:"IAM"})," service."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Under the ",(0,s.jsx)(t.strong,{children:"Access management"})," section, select ",(0,s.jsx)(t.strong,{children:"Roles"}),". Ensure that the ",(0,s.jsx)(t.strong,{children:"Atlantis"})," IAM Role is created. If not, create the role using the ",(0,s.jsx)(t.a,{href:"/docs/next/operator-guide/deploy-aws-eks#deploy-aws-eks-cluster",children:"Deploy AWS EKS Cluster"})," guide."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Navigate to the ",(0,s.jsx)(t.code,{children:"clusters/core/addons/atlantis"})," directory of the forked ",(0,s.jsx)(t.a,{href:"https://github.com/epam/edp-cluster-add-ons",children:"edp-cluster-add-ons"})," repository."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Open the ",(0,s.jsx)(t.code,{children:"values.yaml"})," file and update the ",(0,s.jsx)(t.code,{children:"atlantis.serviceAccount.annotations"})," field to include the ARN of the Atlantis IAM Role. For example:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",metastring:'title="values.yaml"',children:"atlantis:\n  serviceAccount:\n    annotations:\n      eks.amazonaws.com/role-arn: arn:aws:iam::<AWS_ACCOUNT_ID>:role/Atlantis\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Apply the changes by using the ",(0,s.jsx)(t.code,{children:"helm upgrade"})," command or syncing the Argo CD application."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["After configuring the AWS IAM Role, Atlantis will be able to assume the ",(0,s.jsx)(t.strong,{children:"KRCIDeployerRole"})," IAM Role and perform Terraform operations using the provided permissions."]}),"\n",(0,s.jsx)(t.h2,{id:"related-articles",children:"Related Articles"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/docs/next/operator-guide/add-ons-overview",children:"Install via Add-Ons"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/docs/next/operator-guide/auth/keycloak",children:"Install Keycloak"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"/docs/next/operator-guide/install-argocd",children:"Install Argo CD"})}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}function x(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);